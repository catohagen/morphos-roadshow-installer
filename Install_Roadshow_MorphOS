/* Morphos installer for Roadshow 68K TCP/IP stack v1.3 (24.01.2013) by catohaghen@fastmail.fm */


step1="not installed"
step2="not installed"
step3="not installed"
step4="not installed"
step5="not installed"
step6="not installed"
step7="not installed"
step8="not installed"
step9="not installed"
steps="not done"

stepe="not done"
stepu="not done"

/*destdir="ram:roadshow-test/"*/
destdir="SYS:"

input:
netstack=" "
roadshow=" "
if exists(''destdir'C/AddNetInterface') then step1="Already installed..."
if exists(''destdir'Devs/NetInterfaces/SunGEM') then step2="Already installed..."
if exists(''destdir'Devs/NetInterfaces/VIA_Rhine') then step3="Already installed..."
if exists(''destdir'Devs/NetInterfaces/Freescale-MPC52xx') then step4="Already installed..."
if exists(''destdir'Devs/NetInterfaces/Marvell-Discovery-II') then step5="Already installed..."
if exists(''destdir'Devs/NetInterfaces/Realtek-RTL8139') then step6="Already installed..."
if exists(''destdir'Docs/Roadshow68k') then step7="Already installed..."
if exists(''destdir'S/IPF') then step8="Already installed..."
if exists(''destdir'S/PPP-Configurations') then step9="Already installed..."

if exists(''destdir'S/network-startup') then roadshow="X"
if exists('MOSSYS:S/network-startup') then netstack="X"

action=''

options prompt " (select 1-9) (s-t-e-u) (q) to quit -> : " 
say ""
say "Roadshow 68K Installer for MorphOS v1.3 (catohagen@fastmail.fm)"
say ""
say "press [1] to install Roadshow 68k TCP/IP stack                                                  ["step1"]"
say ""
say "press [2] to install Apple Mac Mini or PowerBook SunGEM network configuration for MorphOS       ["step2"]"
say "press [3] to install Pegasos/PegasosII internal VIA Rhine network configuration for MorphOS     ["step3"]"
say "press [4] to install EFIKA 5200B internal Freescale-MPC52xx network configuration for MorphOS   ["step4"]"
say "press [5] to install Pegasos/PegasosII internal Marvell-Discovery-II configuration for MorphOS  ["step5"]"
say "press [6] to install Realtek-RTL8139 PCI card configuration for MorphOS                         ["step6"]"
say ""
say "press [7] to install Roadshow 68k Documentation (to SYS:Docs/Roadshow68k/)                      ["step7"]"
say "press [8] to install Roadshow 68k The IPFILTER (IPF) Firewall                                   ["step8"]"
say "press [9] to install Roadshow 68k PPP/PPPoE drivers for ADSL modems                             ["step9"]"
say ""
say "press [s] to configure Roadshow internal tcp settings                                           ["steps"]"
say "press [t] to Trigger Morphos internal Netstack TCP/IP stack on/off                              ["netstack"] Netstack ["roadshow"] Roadshow"
say ""
say "press [e] to manually edit basic configuration settings (your DNS and Gateway)                  ["stepe"]"
say""
say "press [u] to open uninstall submenu for Roadshow spesific files"
say ""
say "press [q] to quit this installer"
say ""
say ""


parse pull choice
call cmd
call input
exit

cmd:
if choice="q" then call end
if choice="u" then call uninstall
if choice="e" then call edit

if choice="1" then call install
if choice="2" then call apple_hw
if choice="3" then call pegasos_via_rhine
if choice="4" then call efika_mpc52xx
if choice="5" then call pegasos_marvell_discovery
if choice="6" then call rtl_8139
if choice="7" then call docs
if choice="8" then call firewall
if choice="9" then call ppp
if choice="s" then call tune_tcp
if choice="t" then call trigger_stacks


return

edit:
stepe="done"
say ""
options prompt " Do you want to import the MorphOS Netstack 'hosts' file into Roadshow -> : " 
parse pull ans
if ans="y" then do
/* ##########################################################IMPORT HOSTS */
call open(dat,"'destdir'Prefs/Env-Archive/sys/net/hosts",'R')
i=1
do until eof(dat)
line.i=readln(dat)
comment=left(line.i,1)
/* replace netstack ; comment char to # that Roadshow uses */ 
 if comment=";" then do
 startlinelen=length(line.i)
 line.i=right(line.i,startlinelen-1)
 line.i='#'line.i
 end
say line.i
i=i+1
end
entries=i
call close(dat)
comment='# Lines below imported from Morphos Netstack <'destdir'Prefs/Env-Archive/sys/net/hosts>'

i=1
call open(dat,"'destdir'devs/internet/hosts",'a')
call writeln(dat,comment)
do until i=entries-1
call writeln(dat,line.i)
i=i+1
end
call close(dat)
end
address command 'MOSSYS:c/ed 'destdir'devs/internet/hosts'
options prompt " Do you want to import the MorphOS Netstack dns 'NAMESERVERS' file into Roadshow -> : " 
parse pull ans
if ans="y" then do
/* ########################################################## NAMESERVERS */

call open(dat,"'destdir'Prefs/Env-Archive/sys/net/resolv.conf",'R')
i=1
do until eof(dat)
line.i=readln(dat)
comment=left(line.i,1)
/* replace netstack ; comment char to # that Roadshow uses */ 
 if comment=";" then do
 startlinelen=length(line.i)
 line.i=right(line.i,startlinelen-1)
 line.i='#'line.i
 end
say line.i
i=i+1
end
entries=i
call close(dat)

comment='# Lines below imported from Morphos Netstack <'destdir'Prefs/Env-Archive/sys/net/resolv.conf>'

i=1
call open(dat,"'destdir'devs/internet/name_resolution",'a')
call writeln(dat,comment)
do until i=entries-1
call writeln(dat,line.i)
i=i+1
end
call close(dat)
end

say ""
say " Opening config files in editor, remember to save your changes before you quit the editor..."
say ""
address command 'MOSSYS:c/ed 'destdir'devs/internet/name_resolution'
say ""
options prompt " Opening config file for routes, this is the 'gateway' and is usally the ip of your router [press enter]"
parse pull choice
say ""
address command 'MOSSYS:c/ed devs:internet/routes'
return



install:

address command 'filenote #? "Roadshow 68K MorphOS Update 1.8" all'
action='copy'
call install_base
/*
options prompt "Do you want to edit/configure basic settings (your DNS and Gateway) ? -> : " 
parse pull choice
call cmd_config

cmd_config:
if choice="y" then call edit
if choice="n" then call input
return
*/

return

uninstall:
options prompt " (select 1-5) (q) to return to main meny -> : " 
say ""
say " Roadshow 68K Installer for MorphOS v1.3 (catohagen@fastmail.fm)"
say ""
say "                         *** U N I N S T A L L   M E N U *** "
say ""
say " press [1] to remove Roadshow 68k TCP/IP stack -base- stuff (C/ & Devs/ & libs/ &S/ files)      ["step1"]"
say ""
say " press [2] to remove Apple Mac Mini or PowerBook SunGEM network configuration for MorphOS       ["step2"]"
say " press [3] to remove Pegasos/PegasosII internal VIA Rhine network configuration for MorphOS     ["step3"]"
say " press [4] to remove EFIKA 5200B internal Freescale-MPC52xx network configuration for MorphOS   ["step4"]"
say " press [5] to remove Pegasos/PegasosII internal Marvell-Discovery-II configuration for MorphOS  ["step5"]"
say " press [6] to remove Realtek-RTL8139 PCI card configuration for MorphOS                         ["step6"]"
say ""
say " press [7] to remove Roadshow 68k Documentation (from SYS:Docs/Roadshow68k/)                    ["step7"]"
say " press [8] to remove Roadshow 68k The IPFILTER (IPF) Firewall                                   ["step8"]"
say " press [9] to remove Roadshow 68k PPP/PPPoE drivers for ADSL modems                             ["step9"]"
say ""
say " press [a] to remove All Roadshow 68k -base- files, all drivers,docs,firewall,ppp/pppoe, the lot"

/*options prompt " ** This will delete all files related to Roadshow, ARE YOU SURE ** (y or n) : "*/
say ""
parse pull choice

if choice="q" then call input
if choice="1" then call un1
if choice="2" then call un2
if choice="3" then call un3
if choice="4" then call un4
if choice="5" then call un5
if choice="6" then call un6
if choice="7" then call un7
if choice="8" then call un8
if choice="9" then call un9
if choice="a" then call una

un1:
item="Roadshow Base files"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
 options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call install_base
		say ""
		say item" was removed"
		address command "wait 2"
		step1="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

/* | */
un2:
item="Apple Mac Mini / PowerBook SunGEM files"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call apple_hw
		say ""
		say item" was removed"
		address command "wait 2"
		step2="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

un3:
item="Pegasos/PegasosII VIA Rhine files"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call pegasos_via_rhine
		say ""
		say item" was removed"
		address command "wait 2"
		step3="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

un4:
item="EFIKA 5200B Freescale-MPC52xx files"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call efika_mpc52xx
		say ""
		say item" was removed"
		address command "wait 2"
		step4="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

un5:
item="Pegasos/PegasosII Marvell-Discovery-II files"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call pegasos_marvell_discovery
		say ""
		say item" was removed"
		address command "wait 2"
		step5="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

un6:
item="Realtek-RTL8139 PCI card files"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call rtl_8139
		say ""
		say item" was removed"
		address command "wait 2"
		step6="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

un7:
item="Roadshow 68k Documentation"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call docs
		say ""
		say item" was removed"
		address command "wait 2"
		step7="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

un8:
item="Roadshow 68k The IPFILTER (IPF) Firewall files"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call firewall
		say ""
		say item" was removed"
		address command "wait 2"
		step8="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

un9:
item="Roadshow 68k PPP/PPPoE files "
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
		action='delete'
		call ppp
		say ""
		say item" was removed"
		address command "wait 2"
		step9="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall


una:
item="All Roadshow 68k -base- files, all drivers,docs,firewall,ppp/pppoe, the lot"
say ""
options prompt " ** This will remove "item "from your system , ARE YOU SURE ** (y or n) : "
say ""
parse pull choice
   if choice="y" then do
	options prompt " ** Enter 'yes' or 'no' : " 
	parse pull choice
	if choice="yes" then do
action='delete'
call install_base
address command "wait 1"
action='delete'
call apple_hw
address command "wait 1"
action='delete'
call pegasos_via_rhine
address command "wait 1"
action='delete'
call efika_mpc52xx
address command "wait 1"
action='delete'
call pegasos_marvell_discovery
address command "wait 1"
action='delete'
call rtl_8139
address command "wait 1"
action='delete'
call docs
address command "wait 1"
action='delete'
call firewall
address command "wait 1"
action='delete'
call ppp
step1="not installed"
step2="not installed"
step3="not installed"
step4="not installed"
step5="not installed"
step6="not installed"
step7="not installed"
step8="not installed"
step9="not installed"
		say ""
		say item" was removed"
		address command "wait 2"
		step9="not installed"
		call uninstall
	end
		  say " ** Abort **"
	          address command "wait 2"
	say " ** Returning to menu in (2)secs **"
	address command "wait 2"
	call uninstall
   end
say ""
say " ** Aborting **"
say " ** Returning to menu in (2)secs **"
address command "wait 2"
call uninstall

return

/* END EXIT SCRIPT HERE */
end:


netstack=0
roadshow=0

if exists('MOSSYS:S/network-startup') then do
netstack=1
say ""
say " Morphos Internal Netstack is *enabled* and will start after a reboot"
say " If you want to enable Roadshow 68k stack, run this installer again and press option [t]"
address command "wait 6"
say ""
say "Exiting..."
end

if exists(''destdir'S/network-startup') then do
roadshow=1
say ""
say " Roadshow 68K stack is *enabled* and will start after a reboot"
say " If you want to enable Morhos internal stack, run this installer again and press option [t]"
address command "wait 6"
say ""
say "Exiting..."
end

say netstack
say roadshow

if netstack+roadshow=0 then do
say ""
say " * THERE IS NO TCP/IP STACKS ENABLED, YOU WILL BE WITHOUT NETWORK ON THE NEXT BOOT *"
say ""
say " If you want to enable Netstack or Roadshow stack, run this installer again and press option [t]"
address command "wait 6"
end

exit


install_base: /* install all basic files required for Roadshow to work on your network except hw config files */
address command 'filenote #? "Roadshow 68K MorphOS Update 1.8" all'
c: /**********************************************************************C*/
source='Workbench/C/'
dest=''destdir'C/'

if action="copy" then do
/* first rename included wget to wget68k so no existing wget gets overwritten */
address command 'rename 'source'wget 'source'wget68k'

address command ''action' 'source'* 'dest' comment'

/* addnetinterfaces from Morphos upgrade */
source='Roadshow-Update-MorphOS/Files/'
address command ''action' 'source'AddNetInterface 'dest' comment'

end

if action="delete" then do
address command ''action' 'dest'AddNetRoute'
address command ''action' 'dest'ConfigureNetInterface'
address command ''action' 'dest'GetNetStatus'
address command ''action' 'dest'ipfstat'
address command ''action' 'dest'ipnat'
address command ''action' 'dest'NetShutdown'
address command ''action' 'dest'ppp_connector'
address command ''action' 'dest'RemoveNetInterface'
address command ''action' 'dest'SampleNetSpeed'
address command ''action' 'dest'tcpdump'
/* delete c:wget68k but not c:wget */
address command ''action' 'dest'wget68k'
address command ''action' 'dest'traceroute'
address command ''action' 'dest'ShowNetStatus'
address command ''action' 'dest'RoadshowControl'
address command ''action' 'dest'ppp_sample'
address command ''action' 'dest'ppp_dialer'
address command ''action' 'dest'ping'
address command ''action' 'dest'NetLogViewer'
address command ''action' 'dest'ipmon'
address command ''action' 'dest'ipf'
address command ''action' 'dest'ftp'
address command ''action' 'dest'DeleteNetRoute'
address command ''action' 'dest'arp'
address command ''action' 'dest'AddNetInterface'
end

devs: /**********************************************************************devs*/
source='Workbench/Devs/Internet/'
dest=''destdir'Devs/Internet/'

if action="copy" then do
address command ''action' 'source'* 'dest' comment all'
end

if action="delete" then do
dest=''destdir'Devs/Internet'
address command ''action' 'dest 'all'
end


libs: /**********************************************************************libs*/
source='Workbench/Libs/'
dest=''destdir'Libs/'

if action="copy" then do
address command ''action' 'source'* 'dest' comment all'
end

if action="delete" then do
dest=''destdir'Libs/'
address command ''action' 'dest'usergroup.library'
address command ''action' 'dest'bsdsocket.library'
end

s: /**********************************************************************S*/
source='Workbench/S/'
dest=''destdir'S/'

if action="copy" then do
address command ''action' 'source'Network-Startup 'dest' comment all'
/* rename so it doesnt start up at boot */
address command 'rename 'destdir'S/Network-Startup 'destdir'S/Network-Startup.off'
end

if action="delete" then do
dest=''destdir'S/'
address command ''action' 'dest'Network-Startup'
end

say "Finished with install...returning to menu in (3)secs"
address command "wait 3"

return


/* Locale, documentation, firewall and ppp&pppoe installations */


locale: /**********************************************************************locale*/
if action='' then action='copy'
source='Workbench/Locale/catalogs/deutsch/'
dest=''destdir'Locale/catalogs/deutsch/'
if action="copy" then do
address command ''action' 'source'* 'dest' comment'
end

if action="delete" then do
address command ''action' 'dest'usergroup.catalog'
address command ''action' 'dest'roadshow.catalog'
address command ''action' 'dest'ppp-serial.catalog'
address command ''action' 'dest'ppp-ethernet.catalog'
address command ''action' 'dest'bsdsocket.catalog'
end
say "Finished with install...returning to menu in (3)secs"
address command "wait 3"
return

firewall: /**********************************************************************firewall*/
step8="installed"
if action='' then action='copy'
source='Workbench/S/'
dest=''destdir'S/'

if action="copy" then do
address command ''action' 'source'Check-Firewall-Rules 'dest' comment'
address command ''action' 'source'Stop-Firewall 'dest' comment'
address command ''action' 'source'Start-Firewall 'dest' comment'

source='Workbench/S/IPF'
dest=''destdir'S/'
address command ''action' 'source'* 'dest' comment all'

end

if action="delete" then do
dest=''destdir'S/'
address command ''action' 'dest'Check-Firewall-Rules'
address command ''action' 'dest'Stop-Firewall'
address command ''action' 'dest'Start-Firewall'

dest=''destdir'S/IPF'
address command ''action' 'dest 'all'

end
say "Finished with install...returning to menu in (3)secs"
address command "wait 3"

return

docs: /**********************************************************************docs*/
step7="installed"

if action='' then action='copy'
source='Documentation'
dest=''destdir'Docs/Roadshow68k/'

if action="copy" then do
address command ''action' 'source'* 'dest' comment all'
end

if action="delete" then do
dest=''destdir'Docs/Roadshow68k'
address command ''action' 'dest 'all'
end
say "Finished with install...returning to menu in (3)secs"
address command "wait 3"

return

ppp: /**********************************************************************ppp*/
step9="installed"

if action='' then action='copy'
source='Workbench/S/PPP-Configurations/'
dest=''destdir'S/PPP-Configurations/'

if action="copy" then do
address command ''action' 'source'* 'dest' comment all'
source='Workbench/Devs/Networks/'
dest=''destdir'Devs/Networks/'
address command ''action' 'source'* 'dest' comment all'

/* copy the PPP/PPPoE drivers */
source='Workbench/Storage/NetInterfaces/'
dest=''destdir'Devs/NetInterfaces/'
address command ''action' 'source'PPP 'dest' comment'
address command ''action' 'source'PPP.info 'dest' comment'
address command ''action' 'source'PPPoE 'dest' comment'
address command ''action' 'source'PPPoE.info 'dest' comment'

end

if action="delete" then do
dest=''destdir'Devs/Networks/'
address command ''action' 'dest'ppp-serial.device'
address command ''action' 'dest'ppp-ethernet.device'
dest=''destdir'S/PPP-Configurations'
address command ''action' 'dest 'all'
dest=''destdir'Devs/NetInterfaces/'
address command ''action' 'dest'PPP'
address command ''action' 'dest'PPP.info'
address command ''action' 'dest'PPPoE'
address command ''action' 'dest'PPPoE.info'

end
say "Finished with install...returning to menu in (3)secs"
address command "wait 3"
return


apple_hw: /**********************************************************************sungem*/
step2="installed"
if action="" then action="copy"
source='Roadshow-Update-MorphOS/Files/'
dest=''destdir'Devs/NetInterfaces/'

if action="copy" then do
address command ''action' 'source'SunGEM.info 'dest' comment'
address command ''action' 'source'SunGEM 'dest' comment'
say " Apple Mac Mini or PowerBook SunGEM ethernet configuration for MorphOS was installed."
say ""
say " This network interface configuration is preconfigured to connect with DHCP."
say " If you want to use static IPv4 address, you need to manually edit your ip and a corresponding network mask." 
say ""
options prompt " Enter 'y' to edit (opens in editor) SunGEM interface or 'n' to stay with default DHCP -> : " 
parse pull choice

if choice="y" then do
address command 'MOSSYS:c/ed 'destdir'devs/NetInterfaces/SunGEM'
end

end

if action="delete" then do
dest=''destdir'Devs/NetInterfaces/SunGEM*'
address command ''action' 'dest
end
say "Finished with install...returning to menu in (3)secs"
address command "wait 3"

return
pegasos_via_rhine: /**********************************************************************via*/
step3="installed"
if action='' then action='copy'
source='Roadshow-Update-MorphOS/Files/'
dest=''destdir'Devs/NetInterfaces/'

if action="copy" then do
address command ''action' 'source'VIA-Rhine.info 'dest' comment'
address command ''action' 'source'VIA-Rhine 'dest' comment'
say " Pegasos/PegasosII internal VIA Rhine ethernet configuration for MorphOS was installed."
say ""
say " This network interface configuration is preconfigured to connect with DHCP."
say " If you want to use static IPv4 address, you need to manually edit your ip and a corresponding network mask." 
say ""
options prompt " Enter 'y' to edit (opens in editor) VIA_Rhine interface or 'n' to stay with default DHCP -> : " 
parse pull choice

if choice="y" then do
address command 'MOSSYS:c/ed 'destdir'devs/NetInterfaces/VIA-Rhine'
end

end

if action="delete" then do
dest=''destdir'Devs/NetInterfaces/VIA-Rhine*'
address command ''action' 'dest
end

say "Finished with install...returning to menu in (3)secs"
address command "wait 3"
return


efika_mpc52xx: /**********************************************************************efika*/
step4="installed"
if action='' then action='copy'
source='Roadshow-Update-MorphOS/Files/'
dest=''destdir'Devs/NetInterfaces/'

if action="copy" then do
address command ''action' 'source'Freescale-MPC52xx 'dest' comment'
address command ''action' 'source'Freescale-MPC52xx.info 'dest' comment'
say " Efika internal Freescale-MPC52xx ethernet configuration for MorphOS was installed."
say ""
say " This network interface configuration is preconfigured to connect with DHCP."
say " If you want to use static IPv4 address, you need to manually edit your ip and a corresponding network mask." 
say ""
options prompt " Enter 'y' to edit (opens in editor) Freescale-MPC52xx interface or 'n' to stay with default DHCP -> : " 
parse pull choice

if choice="y" then do
address command 'MOSSYS:c/ed 'destdir'devs/NetInterfaces/Freescale-MPC52xx'
end

end

if action="delete" then do
dest=''destdir'Devs/NetInterfaces/Freescale-MPC52xx*'
address command ''action' 'dest
end

say "Finished with install...returning to menu in (3)secs"
address command "wait 3"
return

pegasos_marvell_discovery: /**********************************************************************marvell*/
step5="installed"
if action='' then action='copy'
source='Roadshow-Update-MorphOS/Files/'
dest=''destdir'Devs/NetInterfaces/'

if action="copy" then do
address command ''action' 'source'Marvell-Discovery-II 'dest' comment'
address command ''action' 'source'Marvell-Discovery-II.info 'dest' comment'
say " Pegasos internal Marvell-Discovery-II ethernet configuration for MorphOS was installed."
say ""
say " This network interface configuration is preconfigured to connect with DHCP."
say " If you want to use static IPv4 address, you need to manually edit your ip and a corresponding network mask." 
say ""
options prompt " Enter 'y' to edit (opens in editor) Marvell-Discovery-II interface or 'n' to stay with default DHCP -> : " 
parse pull choice

if choice="y" then do
address command 'MOSSYS:c/ed 'destdir'devs/NetInterfaces/Marvell-Discovery-II'
end

end

if action="delete" then do
dest=''destdir'Devs/NetInterfaces/Marvell-Discovery-II*'
address command ''action' 'dest
end

say "Finished with install...returning to menu in (3)secs"
address command "wait 3"
return

rtl_8139: /**********************************************************************rtl8139*/
step6="installed"
if action='' then action='copy'
source='Roadshow-Update-MorphOS/Files/'
dest=''destdir'Devs/NetInterfaces/'

if action="copy" then do
address command ''action' 'source'Realtek-RTL8139 'dest' comment'
address command ''action' 'source'Realtek-RTL8139.info 'dest' comment'
say " Realtek-RTL8139 PCI ethernet configuration for MorphOS was installed."
say ""
say " This network interface configuration is preconfigured to connect with DHCP."
say " If you want to use static IPv4 address, you need to manually edit your ip and a corresponding network mask." 
say ""
options prompt " Enter 'y' to edit (opens in editor) Realtek-RTL8139 interface or 'n' to stay with default DHCP -> : " 
parse pull choice

if choice="y" then do
address command 'MOSSYS:c/ed 'destdir'devs/NetInterfaces/Realtek-RTL8139'
end

end

if action="delete" then do
dest=''destdir'Devs/NetInterfaces/Realtek-RTL8139*'
address command ''action' 'dest
end

say "Finished with install...returning to menu in (3)secs"
address command "wait 3"
return


tune_tcp:
say ""
say ""
say " By default Roadshow might have too low default values for internal tcp settings, will attempt to adjust these."
say ""
options prompt " Whats your internet connection speed in megabit (Mbps) ? -> : " 
parse pull mbps

kbps=mbps*1024  /*in Kbps*/


say " To get some numbers about your RTT and ping time, we will ping a few sites."
pingmenu:
say ""
say " Press:"
say " [1] to ping http://google.com"
say " [2] to ping http://morphozone.org"
say " [3] to ping http://aminet.net"
say " [4] to ping http://pouet.net"
say " [c] to skip ping and continue setup"
say ""
options prompt " Enter what site to ping, press ctrl-c to stop when pinging [1-4] or [c] enter ping time -> : " 
parse pull site

if site="1" then address command 'ping google.com'
if site="2" then address command 'ping morphzone.org'
if site="3" then address command 'ping aminet.net'
if site="4" then address command 'ping pouet.net'
if site="c" then call cont
call pingmenu

cont:
say ""
options prompt " Whats your average RTT or ping time, this can vary alot but usally a value between 10ms to 50s (in ms)? -> : " 
parse pull rtt
say ""

bandwidth_delay_product=kbps*rtt /*  speed in kbps and multiply it by the latency in ms*/
congestion_window=bandwidth_delay_product/8 /* get the number of bytes for a congestion window in bits wide, divide by 8*/


say ""
say " Roadshow have default MSS (tcp.mssdflt) of 512, this is the maximum segment size used when no better information is available."
say " These days, most networks are capable of moving packets of 1500 bytes, so a good value is 1460 (1500 minus 40 bytes for headers)"
say ""
options prompt " Enter the maximum segment size (tcp.mssdflt) of your network (for MorphOS machines 1460 is recommended) -> : " 
parse pull maximum_segment_size
say ""

congestion_window_size=trunc(congestion_window % maximum_segment_size) /* truncate so congestion window size is an even multiple of the default MSS */

say "congestion_window_size :"congestion_window_size
say "We need this number to be even, rounding up to even number"

do until remain=1
remain=congestion_window_size//2
congestion_window_size=congestion_window_size+1
end
say "New congestion_window_size :"congestion_window_size

congestion_window_size=congestion_window_size/2     /* get sane numbers for Roadshow, if number is too high, it will freeze, we divide by 2 */

/* calc new tcp.sendspace and tcp.recvspace */
tcp_sendspace=congestion_window_size*maximum_segment_size
tcp_recvspace=congestion_window_size*maximum_segment_size

/* read the current values */

if exists('envarc:roadshow/tcp/sendspace') then do
call open(file,'envarc:roadshow/tcp/sendspace','r')
current_sendspace=readln(file)
call close(file)
end

if exists('envarc:roadshow/tcp/recvspace') then do
call open(file,'envarc:roadshow/tcp/recvspace','r')
current_recvspace=readln(file)
call close(file)
end

if exists('envarc:roadshow/tcp/mssdflt') then do
call open(file,'envarc:roadshow/tcp/mssdflt','r')
current_mssdflt=readln(file)
call close(file)
end

say ""
say " Suggested new values for this computer :"
say " tcp.sendspace : "tcp_sendspace"       ["current_sendspace"]"
say " tcp.recvspace : "tcp_recvspace"       ["current_recvspace"]"
say " tcp.mssdflt   : "maximum_segment_size"       ["current_mssdflt"]"
say ""
say " you can set these with the following commands :"
say ""
say " c:RoadshowControl save set tcp.mssdflt "maximum_segment_size
say " c:RoadshowControl save set tcp.recvspace "tcp_recvspace
say " c:RoadshowControl save set tcp.sendspace "tcp_sendspace
say ""
say " *note* Network might become unresponsive if send/recvspace are too high, but under 100.000"
say " seems to work fine on Powerbook and Macmini, both on remote and local traffic."
say ""
options prompt " Do you want to set and save these settings ? -> : " 
parse pull set_save
if set_save="y" then do
address command 'c:RoadshowControl save set tcp.mssdflt 'maximum_segment_size
address command 'c:RoadshowControl save set tcp.recvspace 'tcp_recvspace
address command 'c:RoadshowControl save set tcp.sendspace 'tcp_sendspace
end
step9="done"
call input

trigger_stacks:
if exists('MOSSYS:S/network-startup') then do
say ""
say " disable netstack and enable roadshow..."
say ""
address command 'rename MOSSYS:S/network-startup MOSSYS:S/network-startup.off'
if exists(''destdir'S/network-startup.off') then do
address command 'rename 'destdir'S/network-startup.off 'destdir'S/network-startup'
say ""
say " Roadshow is *enabled* as current TCP/IP stack and will start on the next reboot..."
say ""
roadshow="X"
netstack=" "
address command 'wait 2'
end
if ~exists(''destdir'S/network-startup') then do
say ""
say " Cant disable Roadshow as startup file was not found, please check your S: dir for a file called network-startup.."
options prompt " Do you want me to open a new Ambient lister window for s: ? (y or n) : "
parse pull openwin
if openwin="y" then do
address AMBIENT loaduri destdir's?view=list' newwin
return
end
end

netstack=" "
address command 'wait 3'
return
end

if exists('MOSSYS:S/network-startup.off') then do
 say "" 
 say " disable roadshow and enable netstack..."
 say ""
 say ""
 say " MorphOS Netstack is *enabled* as current TCP/IP stack and will start on the next reboot..."
 say ""
 address command 'rename MOSSYS:S/network-startup.off MOSSYS:S/network-startup'
 netstack="X"
 if ~exists(''destdir'S/network-startup') then do
  say ""
  say " Cant disable Roadshow as its not currently installed..."
  say ""
 end

 if exists(''destdir'S/network-startup') then do
  address command 'rename 'destdir'S/network-startup 'destdir'S/network-startup.off'
  roadshow=" "
  address command 'wait 3'
 end

end
say ""
address command 'wait 3'

return
